#!/usr/bin/env node
var app = require('../app');

if (app.get('env') === 'production') {
    var https = require('https');
    var fs = require('fs');

    var hskey = fs.readFileSync('bin/5417479_www.getbestlesson.com.key');
    var hscert = fs.readFileSync('bin/5417479_www.getbestlesson.com.pem');
    var options = {
        key: hskey,
        cert: hscert
    };

    app.set('port', process.env.PORT || 443);
    var server = https.createServer(options, app).listen(app.get('port'), function() {
        console.log('Express server listening on port ' + server.address().port);
        // send event "ready" to external process manager tool (PM2)
        // So that the application process is considered as online status
        //process.send('ready');
    });

    // intercept the SIGINT signal (emitted by pm2 stop) for Graceful Shutdown
    // By default, pm2 waits 1600ms before sending SIGKILL signal if the applications doesnâ€™t exit itself.
    // Change the default value by option "kill_timeout: 1600"
    process.on('SIGINT', function() {
        console.info('SIGINT signal received.')

        // Stops the server from accepting new connections and finishes existing connections.
        server.close(function(err) {
            if (err) {
                console.error(err)
                process.exit(1)
            }

            // TODO, close database connection and exit with success (0 code)
            process.exit(0)
        })
    })
} else {
    var http = require('http');
    app.set('port', process.env.PORT || 3000);
    var server = http.createServer(app).listen(app.get('port'), function() {
        console.log('Express server listening on port ' + server.address().port);
        // send event "ready" to external process manager tool (PM2)
        // So that the application process is considered as online status
        //process.send('ready');
    });
}

/*
var server = app.listen(app.get('port'), function() {
  console.log('Express server listening on port ' + server.address().port);
});
*/
