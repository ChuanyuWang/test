const util = require('util');
const config = require('../config');
const credentials = require('../config.db');
const { MongoClient } = require('mongodb');

const LOGS_SCHEMA = "dlketang_logs";

// under development if NODE_ENV is not defined as "production".
const env = process.env;
const IS_DEVELOPMENT = env.NODE_ENV !== 'production';

// set the main logging by log4js
const log4js = require('log4js');
// Configuration should take place immediately after requiring log4js for the first time in your application.
log4js.configure(config.log4js);
const logger = IS_DEVELOPMENT ? log4js.getLogger() : log4js.getLogger('production');
// Console replacement
console.log = logger.info.bind(logger);
console.debug = logger.debug.bind(logger);
console.error = logger.error.bind(logger);

console.log("worker start...");

let mongoClient = new MongoClient(connectionURI(LOGS_SCHEMA, credentials), {
    authSource: 'admin',
    useNewUrlParser: true,
    useUnifiedTopology: true,
    poolSize: 3 // Maintain up to 20 socket connections for tenant database
});

console.log("worker connecting database...");

mongoClient.connect(error => {
    if (error) return console.error(error);
    console.log(`connect to database ${LOGS_SCHEMA}`);
});

let intervalID = setInterval(() => {
    console.log(`fetching log...`);
}, 2000);

// intercept the SIGINT signal (emitted by pm2 stop) for Graceful Shutdown
// By default, pm2 waits 1600ms before sending SIGKILL signal if the applications doesnâ€™t exit itself.
// pm2 will try to kill the old process by every 100ms until sending SIGKILL signal
// Change the default value by option "kill_timeout: 1600"
process.on('SIGINT', function() {
    console.info('SIGINT signal received in the worker.')

    // stop the loop
    clearInterval(intervalID);

    // close the database connection
    if (mongoClient) {
        mongoClient.close(err => {
            if (err) return console.error(err);
            console.log(`database connection is closed.`);
        });
        mongoClient = null;
    }

    // close database connection and exit with success (0 code)
    console.log("...worker end");
})

function connectionURI(database, config) {
    //https://docs.mongodb.com/manual/reference/connection-string/#standard-connection-string-format
    if (config.user) {
        return util.format("mongodb://%s:%s@%s:27017/%s", config.user, config.pass, config.host, database);
    } else {
        return util.format("mongodb://%s:27017/%s", config.host, database);
    }
}


